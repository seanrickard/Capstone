@model DepartmentWithDivision


@{
    ViewData["Title"] = "Edit Department";
}

<h2>EditDepartment</h2>
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditDepartment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
            <div class="form-group">
                <label asp-for="DepartmentName" class="control-label"></label>
                <input asp-for="DepartmentName" class="form-control" />
                <span asp-validation-for="DepartmentName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="DivisionId" class="control-label">Division</label>
<<<<<<< HEAD

                @Html.DropDownListFor(x => x.DivisionId, new List<SelectListItem>(ViewBag.Divisions), new { @class = "form-control" })


=======
                @Html.DropDownListFor(x => x.DivisionId, new List<SelectListItem>(ViewBag.Divisions), new { @class = "form-control" })
>>>>>>> dba6f6d9891f9b26028d9fdc11830fd06ea2a801
                <span asp-validation-for="DivisionId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>

            @Html.HiddenFor(x => x.TimeStamp)
            @Html.HiddenFor(x => x.Id)
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

